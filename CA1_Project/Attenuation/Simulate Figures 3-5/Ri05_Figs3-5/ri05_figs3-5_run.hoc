// LOAD NEURON MENU FILEload_file("nrngui.hoc")		// neuron main menunrnmainmenu()// LOAD GEOMETRY AND SIMULATION FILESxopen("ri05.nrn")			// geometryxopen("ri05_pp.hoc")		// point processesxopen("ri05_iofiles.hoc")	// file names for ioxopen("ri05_obj.hoc")		// additional objects (specific to geometry)xopen("ri05_memb.hoc")		// membrane mechanisms (was init)xopen("ri05_func.hoc")		// geometry-independent functionsxopen("ri05_windows.hoc")	// windows// FINE TUNE THE GEOMETRYaccess soma.secarea(0.5)					// due to an idiosynchrosy of NEURON, you have to do the area call firstcorrectsoma()				// correct for the fact that the soma is elliptical rather than cylindricalresegment()					// resegment the model to increase spatial accuracy// CHOOSE THE MEMBRANE PROPERTIESipass=2						// equals 1 for uniform Rm, 2 for nonuniform Rminit_h=5					// equals 1 for uniform Ih, =5 for nonuniform Ihhblock=0					// between 0 and 1, for fraction of H conductance blockedfig=5						// figure number// CHOOSE THE TYPE OF SIMULATIONinject_where=0				// 0 for somatic current injection, 1 for dend current injectionwriteout = 0    			// equals 1 if simulation output should be written to a filemakeplot = 0				// equals 1 if you want to generate an output file for a plotusecvode = 0				// use variable time step method// INITIALIZE THE MEMBRANEinit_params()				// this initializes critical parametersinsert_pass()				// insert and initialize passive membraneif (hblock==1) {	init_h=0}if (init_h>0) {  	insert_h()				// insert and iinitialize H conductance}init()// SIMULATION FOR FIGURE 5 (LONG CURRENT INJECTION)dt=0.1tstop=600steps_per_ms=1/dtscreen_update_invl=0.5somastep_cc(-0.03, 31.3, 400.4)	// cesium casesomastep_cc(-0.05, 30.8, 400.1)	// control casedo_windows()