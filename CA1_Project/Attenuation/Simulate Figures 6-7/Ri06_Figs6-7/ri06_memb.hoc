// this file contains procedures used to set the membrane propertiesproc init_params() {	// initialize user-defined membrane parameters	celsius=35	global_ra=139.09	// internal resistivity in ohm-cm	Cm=1.70944          // specific membrane capacitance in uF/cm^2	Rm=16428.5    	    // specific membrane resistivity in ohm-cm^2  get this from fit of tau_m, assuming Cm=1 	rmsoma=Rm 	Vleak=-72			// leak reversal	Vrest=-72			// resting potential -63 in control	nablock=1     	 	// fraction of na current blocked by TTX	target=59.42      	// input resistance target in CsCl	// attenuation is 0.515 in CsCl for this cell	// passive membrane parameters determined by fitting Cs data	if (ipass>1) {		// nonuniform Rm values		global_ra=139.09		rmsoma=74697		rmend=10216		rmhalfdis=115.07		rmsteep=20		Cm=2.015	}	if ((ipass==2) && (init_h==5) && (hblock<1)) {		// nonuniform Rm and nonuniform gh		Vrest=-63		minq=0.1002 		// units are pS/um2		maxq=14.349 		// units are pS/um2		qhalfdis=216.65		qsteep=79.4		erevh_h=-25		zeta_h=7		a0_h=0.0019366		qten_h=4.5	}}// insert and initialize membrane propertiesproc insert_pass() {	print "Inserting passive membrane"	forall {insert pas Ra=global_ra e_pas=Vleak}	forall {insert dv}	print "Inserting spines and setting spine scale values"	forall { insert spines scale_spines=1.0 }	forsec no_spines 		{ scale_spines=1.0 }	forsec basals 			{ scale_spines=2.7 }	forsec med_spines_rad 	{ scale_spines=1.2 }	forsec max_spines_rad 	{ scale_spines=1.6 }	forsec thin_rad 		{ scale_spines=2.6 }	forsec med_spines_LM 	{ scale_spines=1.1 }	forsec thin_LM 			{ scale_spines=1.2 }	if (ipass==1) {		init_pass1(Cm)		// initialize uniform passive membrane	}	if (ipass==2) {		init_pass2(Cm)		// initialize nonuniform passive membrane	}}proc insert_h() {	printf("Inserting sag conductance in all segments: %d pecent blocked\n",hblock*100)	forall { insert h gbar_h=0 }	if (init_h==1) {		init_h1(a0_h*1000)	// initialize uniform h conductance, uniform Rm	}	if (init_h==4) {		init_h4(a0_h*1000)	// initialize nonuniform Rm, nonuniform Ih	}	if (init_h==5) {		init_h5(a0_h*1000)	// initialize nonuniform Rm, nonuniform Ih	}}//	initialize parameters for uniform Rm			proc init_pass1() {	Cm=$1	print "Initializing uniform passive membrane properties"	Rm=rmsoma	forall { g_pas=1/(Rm/scale_spines) cm=Cm*scale_spines Ra = global_ra }}			//	initialize parameters for nonuniform Rm			proc init_pass2() {	// sigmoidal decrease in Rm from rmsoma to rmend	// rmsoma and rmend, and rmhalfdis and rmsteep are set in init_params	// function applies to basal dendrites also	print "Initializing nonuniform passive membrane properties with init_pass2"	Cm=$1	soma.sec distance()	printf("rmsoma = %3.0f, rmend = %3.0f, rmsteep = %3.0f\n",rmsoma, rmend, rmsteep)	forall{		dis=distance(0.5)		rmpoint=rmend+(rmsoma-rmend)/(1+exp((dis-rmhalfdis)/rmsteep))		{ g_pas=1/(rmpoint/scale_spines) cm=Cm*scale_spines Ra = global_ra }	}}			//	initialize uniform H conductance			proc init_h1() {	a0_h=$1/1000	print "Initializing uniform sag conductance in all segments\n"	maxq=minq	forall { gbar_h=maxq*scale_spines*(1-hblock) }}//	initialize nonuniform H conductance			proc init_h4() {	// scale up sag conductance as a sigmoidal function of distance from the soma	// q=minq+(maxq-minq)/(1+exp((-dis-qhalfdis)/qsteep))	// set minq, maxq, and qhalfdis and qsteep in init_params	printf("Initializing sag conductance in all segments with init_h4\n")	a0_h=$1/1000	soma.sec distance()	forall{		dis=distance(0.5)		hpoint=minq+(maxq-minq)/(1+exp(-(dis-qhalfdis)/qsteep))		{ gbar_h=hpoint*scale_spines*(1-hblock) }	}}proc init_h5() {	// scale up sag conductance as a sigmoidal function of distance from the soma	// q=minq+(maxq-minq)/(1+exp((-dis-qhalfdis)/qsteep))	// basals are set to the same value as the soma	// set minq, maxq, and qhalfdis and qsteep in init_params	printf("Initializing sag conductance in all segments with init_h5\n")	a0_h=$1/1000	soma.sec distance()	forall{		dis=distance(0.5)		hpoint=minq+(maxq-minq)/(1+exp(-(dis-qhalfdis)/qsteep))		{ gbar_h=hpoint*scale_spines*(1-hblock) }	}	forsec basals{		{ gbar_h=minq*scale_spines*(1-hblock) }		}}