>> import moose
>>> neuron = moose.Neutral('/neuron')
>>> spikegen = moose.SpikeGen('/neuron/spikegen')
>>> spikegen.threshold = 0.0
>>> spikegen.refractT = 1e-3
>>> import util as u
>>> import pylab as plt
>>> soma_l = 30e-6
>>> soma_rad = 10e-6
>>> dend_l = 100e-6
>>> dend_rad = 1e-6
>>> RM = 2
>>> CM = 0.01
>>> RA = 10
>>> Em = -65e-3
>>> pulse_dur = 100e-3
>>> pulse_amp = 0.1e-9
>>> pulse_delay = 50e-3
>>> soma = u.createCompartment(neuron,'swagginSoma',soma_l,soma_rad,RM,CM,RA,Em,Em)
>>> dend = u.createCompartment(neuron,'swagginDend',dend_l,dend_rad,RM,CM,RA,Em,Em)
>>> moose.connect(soma,'axialOut',dend,'handleAxial')
<moose.SingleMsg: id=5, dataIndex=0, path=/Msgs[0]/singleMsg[0]>
>>> # Create a pulse and connect it to the soma
... soma_pulse = u.createPulse(soma, 'rollingWave', pulse_dur, pulse_amp, pulse_delay)
Traceback (most recent call last):
  File "<stdin>", line 2, in <module>
TypeError: createPulse() takes exactly 6 arguments (5 given)
>>> 
>>> # Create data tables to store the voltage for the soma and each compartment
... # making up the dendritic branch
... data = moose.Neutral('/data')
>>> pulse_delay2 = 1e9
>>> soma_pulse = u.createPulse(soma, 'rollingWave', pulse_dur, pulse_amp, pulse_delay, pulse_delay2)
>>> soma_Vm, soma_Iex = u.createDataTables(soma, data, soma_pulse)
>>> synchan = moose.SynChan('/neuron/swagginDend/glu')
>>> synchan.Gbar = 1e-8
>>> synchan.tau1 = 2e-3
>>> synchan.tau2 = 2e-3
>>> synchan.Ek = -0.010
>>> msg = moose.connect(dend, 'channel', synchan, 'channel')
>>> sh = moose.SimpleSynHandler('/neuron/swagginDend/glu/synhandler')
>>> moose.connect(sh, 'activationOut', synchan, 'activation')
<moose.SingleMsg: id=5, dataIndex=5, path=/Msgs[0]/singleMsg[5]>
>>> sh.synapse.num = 1
>>> sh.synapse[0].delay = 1e-3
>>> moose.showmsg(sh)
INCOMING:
/neuron[0]/swagginDend[0]/glu[0]/synhandler ('parentMsg',) <--- /neuron[0]/swagginDend[0]/glu ('childOut',)
/neuron[0]/swagginDend[0]/glu[0]/synhandler ('process', 'reinit') <--- /clock ('process1', 'reinit1')
OUTGOING:
/neuron[0]/swagginDend[0]/glu[0]/synhandler ('childOut',) ---> /neuron[0]/swagginDend[0]/glu[0]/synhandler[0]/synapse ('parentMsg',)
/neuron[0]/swagginDend[0]/glu[0]/synhandler ('activationOut',) ---> /neuron[0]/swagginDend[0]/glu ('activation',)
>>> moose.showmsg(synchan)
INCOMING:
/neuron[0]/swagginDend[0]/glu ('parentMsg',) <--- /neuron[0]/swagginDend ('childOut',)
/neuron[0]/swagginDend[0]/glu ('process', 'reinit') <--- /clock ('process2', 'reinit2')
/neuron[0]/swagginDend[0]/glu ('Vm',) <--- /neuron[0]/swagginDend ('VmOut',)
/neuron[0]/swagginDend[0]/glu ('activation',) <--- /neuron[0]/swagginDend[0]/glu[0]/synhandler ('activationOut',)
OUTGOING:
/neuron[0]/swagginDend[0]/glu ('childOut',) ---> /neuron[0]/swagginDend[0]/glu[0]/synhandler ('parentMsg',)
/neuron[0]/swagginDend ('VmOut',) ---> /neuron[0]/swagginDend[0]/glu ('Vm',)
>>> moose.showfield(sh.synapse[0])

[ /neuron[0]/swagginDend[0]/glu[0]/synhandler[0]/synapse[0] ]
className        = Synapse
delay            = 0.001
dt               = 0.0
fieldIndex       = 0
idValue          = 460
index            = 0
name             = synapse
numData          = 1
numField         = 1
path             = /neuron[0]/swagginDend[0]/glu[0]/synhandler[0]/synapse[0]
spikeTime        = 0.0
tick             = -1
weight           = 1.0
>>> pre_syn = moose.RandSpike('presyn_input')
>>> presyn.rate = 1.3
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'presyn' is not defined
>>> pre_syn.rate = 1.3
>>> pre_syn.refractT = 1e-3
>>> sh.synapse.num = 1
>>> sh.synapse[0].delay = 5e-3
>>> moose.connect(pre_syn, 'spikeOut', sh.synapse[0], 'addSpike')
<moose.SingleMsg: id=5, dataIndex=6, path=/Msgs[0]/singleMsg[6]>
>>> # the commands above specify and connect the randSpike to a synapse on the dendrite
... 
>>> pre_syn2 = moose.RandSpike('pre_syn2')
>>> pre_syn2.rate = 1.3
>>> pre_syn2.refractT = 1e-3
>>> sh.synapse.num=2
>>> sh.synapse[1].delay = 5e-3
>>> # commands above connect another spike from a pre-synaptic neuron to the synapse
... 
>>> moose.showfield(sh)

[ /neuron[0]/swagginDend[0]/glu[0]/synhandler[0] ]
className        = SimpleSynHandler
dt               = 5e-05
fieldIndex       = 0
idValue          = 459
index            = 0
name             = synhandler
numData          = 1
numField         = 1
numSynapses      = 2
path             = /neuron[0]/swagginDend[0]/glu[0]/synhandler[0]
tick             = 1
>>> sh.synapse.num
2
>>> moose.connect(pre_syn2, 'spikeOut', sh.synapse[1], 'addSpike')
<moose.SingleMsg: id=5, dataIndex=7, path=/Msgs[0]/singleMsg[7]>
>>> spike_table = moose.Table(tablename)
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'tablename' is not defined
>>> spike_table = moose.Table('st')
>>> moose.connect(pre_syn, 'spikeOut', spike_table, 'spike')
<moose.SingleMsg: id=5, dataIndex=8, path=/Msgs[0]/singleMsg[8]>
>>> spike_table2 = moose.Table('st2')
>>> moose.connect(pre_syn2, 'spikeOut', spike_table2, 'spike')
<moose.SingleMsg: id=5, dataIndex=9, path=/Msgs[0]/singleMsg[9]>
>>> moose.reinit()
>>> moose.start(1)
>>> moose.showfield('st2')

[ /st2[0] ]
className        = Table
columnName       = 
dt               = 0.0001
fieldIndex       = 0
format           = csv
idValue          = 464
index            = 0
name             = st2
numData          = 1
numField         = 1
outfile          = 
outputValue      = 0.0
path             = /st2[0]
plotDump         = plot.Dump
size             = 1
threshold        = 0.0
tick             = 8
useSpikeMode     = False
useStreamer      = False
>>> spike_table.vector
array([0.5443])
>>> spike_table1.vector
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'spike_table1' is not defined
>>> spike_table2.vector
array([0.5108])
>>> pre_syn.rate = 10
>>> pre_syn2.rate = 10
>>> moose.reinit()
>>> moose.start(1)
>>> spike_table1.vector
Traceback (most recent call last):
  File "<stdin>", line 1, in <module>
NameError: name 'spike_table1' is not defined
>>> spike_table.vector
array([0.2557])
>>> spike_table2.vector
array([0.0117])

